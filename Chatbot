{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP5ggf/JGsemhUsRa3+g0qU",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Skarra69/chatbot/blob/main/Untitled2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def gene_chatbot():\n",
        "    print(\"Gene: Hello! I'm Gene, your rule-based chatbot ðŸ¤–\")\n",
        "    print(\"Gene: Ask me something or type 'exit' to quit.\")\n",
        "\n",
        "    while True:\n",
        "        user_input = input(\"You: \").lower().strip()\n",
        "\n",
        "        if user_input == \"exit\":\n",
        "            print(\"Gene: Goodbye! Have a great day! ðŸ‘‹\")\n",
        "            break\n",
        "\n",
        "        elif user_input in [\"hi\", \"hello\", \"hey\"]:\n",
        "            print(\"Gene: Hello there! ðŸ˜Š\")\n",
        "\n",
        "        elif \"how are you\" in user_input:\n",
        "            print(\"Gene: I'm doing great, thank you! How about you?\")\n",
        "\n",
        "        elif \"your name\" in user_input:\n",
        "            print(\"Gene: I'm Gene, your rule-based chatbot friend!\")\n",
        "\n",
        "        elif \"help\" in user_input:\n",
        "            print(\"Gene: I can chat with you and solve simple math. Try asking: 'what is 5 + 3'\")\n",
        "\n",
        "        elif \"bye\" in user_input:\n",
        "            print(\"Gene: Bye! Take care! ðŸŒŸ\")\n",
        "\n",
        "        elif user_input.startswith(\"what is\"):\n",
        "            try:\n",
        "                expression = user_input.replace(\"what is\", \"\").strip()\n",
        "                result = eval(expression)\n",
        "                print(f\"Gene: The answer is {result}\")\n",
        "            except:\n",
        "                print(\"Gene: Hmm... I can't solve that. Try something like 'what is 4 * 5'.\")\n",
        "\n",
        "        else:\n",
        "            print(\"Gene: I'm not sure how to respond to that. Can you try asking differently?\")\n",
        "\n",
        "gene_chatbot()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "_tT8MjBErnrR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 110
        },
        "outputId": "5d57c27a-afd8-43cb-affc-abd0dc279acd"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "invalid syntax (<ipython-input-1-2021491736>, line 41)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-2021491736>\"\u001b[0;36m, line \u001b[0;32m41\u001b[0m\n\u001b[0;31m    echo \"# chatbot\" >> README.md\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    }
  ]
}
